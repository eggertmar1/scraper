version: '3.8'
services:
  postgres:
    image: postgres:14
    container_name: soccer-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:latest
    depends_on:
      postgres:
        condition: service_healthy
    command: -url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME} -user=${DB_USER} -password=${DB_PASSWORD} -locations=filesystem:/flyway/sql migrate
    volumes:
      - ./db/migrations:/flyway/sql

  app:
    build: .  # Dockerfile is in the same directory as docker-compose.yml (scraper directory)
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: "${DB_PORT}"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      PORT: "${PORT}"
    depends_on:
      flyway:
        condition: service_started  # Go app starts only after Flyway runs migrations
    ports:
      - "${PORT}:${PORT}"

volumes:
  postgres_data:
